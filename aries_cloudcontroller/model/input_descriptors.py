# coding: utf-8

from __future__ import annotations

import re  # noqa: F401
from datetime import date, datetime  # noqa: F401
from typing import Any, Dict, List, Literal, Optional, Union  # noqa: F401

from pydantic import (  # noqa: F401
    AnyUrl,
    BaseModel,
    ConfigDict,
    EmailStr,
    Extra,
    Field,
    validator,
)

from aries_cloudcontroller.model.constraints import Constraints
from aries_cloudcontroller.model.schemas_input_descriptor_filter import (
    SchemasInputDescriptorFilter,
)


class InputDescriptors(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    InputDescriptors - a model defined in OpenAPI
        constraints: The constraints of this InputDescriptors [Optional].
        group: The group of this InputDescriptors [Optional].
        id: ID [Optional].
        metadata: Metadata dictionary [Optional].
        name: Name [Optional].
        purpose: Purpose [Optional].
        schema_: Accepts a list of schema or a dict containing filters like oneof_filter. [Optional].
    """

    constraints: Optional[Constraints] = None
    group: Optional[List[str]] = None
    id: Optional[str] = None
    metadata: Optional[Dict[str, Any]] = None
    name: Optional[str] = None
    purpose: Optional[str] = None
    schema_: Optional[SchemasInputDescriptorFilter] = Field(None, alias="schema")
    model_config = ConfigDict(populate_by_name=True)


InputDescriptors.model_rebuild()
