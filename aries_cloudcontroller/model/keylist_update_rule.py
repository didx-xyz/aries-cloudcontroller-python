# coding: utf-8

from __future__ import annotations

import re  # noqa: F401
from datetime import date, datetime  # noqa: F401
from typing import Any, Dict, List, Literal, Optional, Union  # noqa: F401

from pydantic import (  # noqa: F401
    AnyUrl,
    BaseModel,
    ConfigDict,
    EmailStr,
    Extra,
    Field,
    field_validator,
)


class KeylistUpdateRule(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    KeylistUpdateRule - a model defined in OpenAPI
        action: Action for specific key.
        recipient_key: Key to remove or add.
    """

    action: Literal["add", "remove"]
    recipient_key: str

    @field_validator("recipient_key")
    @classmethod
    def recipient_key_pattern(cls, value):
        pattern = r"^did:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$|^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        if not re.match(pattern, value):
            raise ValueError(
                f"Value of recipient_key does not match regex pattern ('{pattern}')"
            )
        return value

    model_config = ConfigDict(populate_by_name=True)


KeylistUpdateRule.model_rebuild()
