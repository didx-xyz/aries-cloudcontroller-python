# coding: utf-8

from __future__ import annotations

import re  # noqa: F401
from datetime import date, datetime  # noqa: F401
from typing import Any, Dict, List, Literal, Optional, Union  # noqa: F401

from pydantic import (  # noqa: F401
    AnyUrl,
    BaseModel,
    ConfigDict,
    EmailStr,
    Extra,
    Field,
    field_validator,
)

from aries_cloudcontroller.model.indy_rev_reg_entry_value import IndyRevRegEntryValue


class IndyRevRegEntry(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    IndyRevRegEntry - a model defined in OpenAPI
        value: Revocation registry entry value [Optional].
        ver: Version of revocation registry entry [Optional].
    """

    value: Optional[IndyRevRegEntryValue] = None
    ver: Optional[str] = None

    @field_validator("ver")
    @classmethod
    def ver_pattern(cls, value):
        # Property is optional
        if value is None:
            return

        pattern = r"^[0-9.]+$"
        if not re.match(pattern, value):
            raise ValueError(f"Value of ver does not match regex pattern ('{pattern}')")
        return value

    model_config = ConfigDict(populate_by_name=True)


IndyRevRegEntry.model_rebuild()
