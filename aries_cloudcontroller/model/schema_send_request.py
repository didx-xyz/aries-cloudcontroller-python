# coding: utf-8

from __future__ import annotations

import re  # noqa: F401
from datetime import date, datetime  # noqa: F401
from typing import Any, Dict, List, Literal, Optional, Union  # noqa: F401

from pydantic import (  # noqa: F401
    AnyUrl,
    BaseModel,
    ConfigDict,
    EmailStr,
    Extra,
    Field,
    field_validator,
)


class SchemaSendRequest(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    SchemaSendRequest - a model defined in OpenAPI
        attributes: List of schema attributes.
        schema_name: Schema name.
        schema_version: Schema version.
    """

    attributes: List[str]
    schema_name: str
    schema_version: str

    @field_validator("schema_version")
    @classmethod
    def schema_version_pattern(cls, value):
        pattern = r"^[0-9.]+$"
        if not re.match(pattern, value):
            raise ValueError(
                f"Value of schema_version does not match regex pattern ('{pattern}')"
            )
        return value

    model_config = ConfigDict(populate_by_name=True)


SchemaSendRequest.model_rebuild()
