# coding: utf-8

from __future__ import annotations

import re  # noqa: F401
from datetime import date, datetime  # noqa: F401
from typing import Any, Dict, List, Literal, Optional, Union  # noqa: F401

from pydantic import (  # noqa: F401
    AnyUrl,
    BaseModel,
    ConfigDict,
    EmailStr,
    Extra,
    Field,
    validator,
)


class SignatureOptions(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    SignatureOptions - a model defined in OpenAPI
        proof_purpose: The proof_purpose of this SignatureOptions.
        verification_method: The verification_method of this SignatureOptions.
        challenge: The challenge of this SignatureOptions [Optional].
        domain: The domain of this SignatureOptions [Optional].
        type: The type of this SignatureOptions [Optional].
    """

    proof_purpose: str = Field(..., alias="proofPurpose")
    verification_method: str = Field(..., alias="verificationMethod")
    challenge: Optional[str] = None
    domain: Optional[str] = None
    type: Optional[str] = None
    model_config = ConfigDict(populate_by_name=True)


SignatureOptions.model_rebuild()
