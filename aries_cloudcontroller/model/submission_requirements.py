# coding: utf-8

from __future__ import annotations

import re  # noqa: F401
from datetime import date, datetime  # noqa: F401
from typing import Any, Dict, List, Literal, Optional, Union  # noqa: F401

from pydantic import (  # noqa: F401
    AnyUrl,
    BaseModel,
    ConfigDict,
    EmailStr,
    Extra,
    Field,
    validator,
)


class SubmissionRequirements(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    SubmissionRequirements - a model defined in OpenAPI
        count: Count Value [Optional].
        from_: From [Optional].
        from_nested: The from_nested of this SubmissionRequirements [Optional].
        max: Max Value [Optional].
        min: Min Value [Optional].
        name: Name [Optional].
        purpose: Purpose [Optional].
        rule: Selection [Optional].
    """

    count: Optional[int] = None
    from_: Optional[str] = Field(None, alias="from")
    from_nested: Optional[List[SubmissionRequirements]] = None
    max: Optional[int] = None
    min: Optional[int] = None
    name: Optional[str] = None
    purpose: Optional[str] = None
    rule: Optional[Literal["all", "pick"]] = None
    model_config = ConfigDict(populate_by_name=True)


SubmissionRequirements.model_rebuild()
